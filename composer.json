{
    "name": "phenaproxima/recipe-test",
    "description": "A Drupal project set up for applying recipes.",
    "type": "project",
    "license": "GPL-2.0-or-later",
    "homepage": "https://www.drupal.org/project/drupal",
    "support": {
        "docs": "https://www.drupal.org/docs/user_guide/en/index.html",
        "chat": "https://www.drupal.org/node/314178"
    },
    "repositories": {
        "recipe-unpack": {
            "type": "vcs",
            "url": "https://gitlab.ewdev.ca/yonas.legesse/drupal-recipe-unpack.git"
        },
        "drupal": {
            "type": "composer",
            "url": "https://packages.drupal.org/8"
        }
    },
    "require": {
        "composer/composer": "^2.6",
        "composer/installers": "^2.0",
        "cweagans/composer-patches": "^2@beta",
        "drupal/core-composer-scaffold": "11.x-dev",
        "drupal/core-recommended": "11.x-dev",
        "drush/drush": "^13",
        "ewcomposer/unpack": "1.x-dev@dev",
        "oomphinc/composer-installers-extender": "^2.0"
    },
    "conflict": {
        "drupal/drupal": "*"
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "config": {
        "allow-plugins": {
            "composer/installers": true,
            "drupal/core-composer-scaffold": true,
            "phpstan/extension-installer": true,
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "cweagans/composer-patches": true,
            "oomphinc/composer-installers-extender": true,
            "ewcomposer/unpack": true
        },
        "sort-packages": true
    },
    "extra": {
        "drupal-scaffold": {
            "locations": {
                "web-root": "web/"
            }
        },
        "installer-paths": {
            "web/core": [
                "type:drupal-core"
            ],
            "web/libraries/{$name}": [
                "type:drupal-library"
            ],
            "web/modules/contrib/{$name}": [
                "type:drupal-module"
            ],
            "web/profiles/contrib/{$name}": [
                "type:drupal-profile"
            ],
            "web/themes/contrib/{$name}": [
                "type:drupal-theme"
            ],
            "drush/Commands/contrib/{$name}": [
                "type:drupal-drush"
            ],
            "web/modules/custom/{$name}": [
                "type:drupal-custom-module"
            ],
            "web/profiles/custom/{$name}": [
                "type:drupal-custom-profile"
            ],
            "web/recipes/contrib/{$name}": [
                "type:drupal-recipe"
            ],
            "web/themes/custom/{$name}": [
                "type:drupal-custom-theme"
            ]
        },
        "installer-types": [
            "drupal-recipe"
        ],
        "patches": {
            "drupal/core": {
                "Add recipe support": "./patches/recipes-11.x-2024-03-07.diff",
                "Model Standard as a set of recipes": "./patches/recipes-70-09c0fba0d7d1d2f1f9e346354bcc23168c6fd90c.diff"
            },
            "drupal/project_browser": {
                "Various fixes to 1.0.x for demo purposes": "./patches/project_browser-1.0.x-fixes.diff"
            }
        },
        "composer-exit-on-patch-failure": true
    },
    "scripts": {
        "clean": [
            "@composer remove kanopi/gin-admin-experience",
            "chmod +w ./web/sites/default",
            "chmod +w ./web/sites/default/settings.php; rm ./web/sites/default/settings.php || true"
        ],
        "install-from-recipe": [
            "@composer clean",
            "drush site:install empty --yes --db-url sqlite://localhost/$PWD/db.sqlite --account-pass admin",
            "cd web && php ./core/scripts/drupal recipe ./core/recipes/standard",
            "drush cache:rebuild"
        ],
        "install-drupal": [
            "@composer clean",
            "drush site:install standard --yes --db-url sqlite://localhost/$PWD/db.sqlite --account-pass admin",
            "drush pm:enable --yes project_browser_recipe_demo",
            "drush config:set --yes package_manager.settings executables.composer $PWD/vendor/bin/composer",
            "drush config:set --yes package_manager.settings include_unknown_files_in_project_root true --input-format=yaml",
            "drush config:set --yes project_browser.admin_settings allow_ui_install true --input-format=yaml",
            "drush config:set --yes project_browser.admin_settings enabled_sources '[drupalorg_mockapi, recipe_test]' --input-format=yaml",
            "drush watchdog:delete all --yes"
        ],
        "post-create-project-cmd": [
            "find web -type d -name .git -delete"
        ],
        "post-install-cmd": "@post-create-project-cmd",
        "post-update-cmd": "@post-create-project-cmd"
    }
}
